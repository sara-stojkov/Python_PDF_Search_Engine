5.5. Using Array-Based Sequences
215
1
def insertion sort(A):
2
”””Sort list of comparable elements into nondecreasing order.”””
3
for k in range(1, len(A)):
# from 1 to n-1
4
cur = A[k]
# current element to be inserted
5
j = k
# ﬁnd correct index j for current
6
while j > 0 and A[j−1] > cur:
# element A[j-1] must be after current
7
A[j] = A[j−1]
8
j −= 1
9
A[j] = cur
# cur is now in the right place
Code Fragment 5.10: Python code for performing insertion-sort on a list.
insert
insert
insert
0
0
0
0
0
0
0
0
0
0
0
0
Done!
0
C
A
E
H G
F
B
C
A
E
H G
F
D
B
E
H G
F
C
D
A
H G
F
B
C
D
E
A
F
B
C
D
E
H
A
G
F
B
C
D
E
H
E
H G
F
D
C
B
B
E
H G
F
D
C
A
F
B
C
D
E
H
B
C
D
E
H
G
B
A
A
B
C
D
E
G
H
A
B
C
F
F
G
A
G
H
E
A
D
C
D
E
H
H
G
F
E
D
G
C
A
B
D
no move
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
cur
1
2
3
4
5
6
7
move
move
move
no move
no move
no move
no move
move
no move
move
move
1
Figure 5.20: Execution of the insertion-sort algorithm on an array of eight charac-
ters. Each row corresponds to an iteration of the outer loop, and each copy of the
sequence in a row corresponds to an iteration of the inner loop. The current element
that is being inserted is highlighted in the array, and shown as the cur value.
