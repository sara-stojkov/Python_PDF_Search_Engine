11.4. Splay Trees
491
zig-zag: One of x and y is a left child and the other is a right child. (See Fig-
ure 11.17.) In this case, we promote x by making x have y and z as its chil-
dren, while maintaining the inorder relationships of the nodes in T.
x
z
T4
y
T2
T3
30
10
20
T1
10
T2
y
T3
T4
20
z
x
30
T1
(a)
(b)
Figure 11.17: Zig-zag: (a) before; (b) after. There is another symmetric conﬁgura-
tion where x is a right child and y is a left child.
zig: x does not have a grandparent. (See Figure 11.18.) In this case, we perform a
single rotation to promote x over y, making y a child of x, while maintaining
the relative inorder relationships of the nodes in T.
T1
T2
T3
10
y
20
x
T1
T2
T3
10
y
20
x
(a)
(b)
Figure 11.18: Zig: (a) before; (b) after. There is another symmetric conﬁguration
where x is originally a left child of y.
We perform a zig-zig or a zig-zag when x has a grandparent, and we perform a
zig when x has a parent but not a grandparent. A splaying step consists of repeating
these restructurings at x until x becomes the root of T. An example of the splaying
of a node is shown in Figures 11.19 and 11.20.
